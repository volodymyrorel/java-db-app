/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mypackage;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static mypackage.MainForm.conn;
/**
 *
 * @author Володимир
 */
public class OrdersForm extends javax.swing.JFrame {

    /**
     * Creates new form AgentsForm
     */
    public OrdersForm() {
        initComponents();
        tableUpdate("SELECT * FROM `orders`;");
        cbNTUpdate();
        cbTOUpdate();
        cbNAUpdate();
        cbPIUpdate();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSD = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buttonNew = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbNT = new javax.swing.JComboBox<>();
        cbTO = new javax.swing.JComboBox<>();
        cbNA = new javax.swing.JComboBox<>();
        cbPI = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtCD = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Турагентство | Агенти");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Дані", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jLabel2.setText("Туроператор:");

        jLabel3.setText("Дата початку:");

        jLabel1.setText("Назва туру:");

        buttonNew.setText("Новий");
        buttonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewActionPerformed(evt);
            }
        });

        buttonEdit.setText("Редагувати");
        buttonEdit.setEnabled(false);
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonDelete.setText("Видалити");
        buttonDelete.setEnabled(false);
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        jLabel5.setText("К-сть днів:");

        txtDC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDCActionPerformed(evt);
            }
        });

        jLabel6.setText("Ім'я агента:");

        jLabel7.setText("Паспорт замовника:");

        cbNT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbTO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbNA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbPI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Дата заключення:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSD, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtDC)
                            .addComponent(cbNT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbTO, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbPI, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbNA, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCD)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(buttonEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(buttonNew, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbNA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonNew)
                    .addComponent(buttonDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonEdit)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Договори");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "idorders", "createdate", "name_tour", "touroperator", "startdate", "dayscount", "name_agent", "passport_id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(559, 559, 559)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4)
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    PreparedStatement ps;
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void buttonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewActionPerformed
        // TODO add your handling code here:
        String cd = txtCD.getText();
        String nt = cbNT.getSelectedItem().toString();
        String to = cbTO.getSelectedItem().toString();
        String sd = txtSD.getText();
        String dc = txtDC.getText();
        String na = cbNA.getSelectedItem().toString();
        String pi = cbPI.getSelectedItem().toString();
        
        if (!"".equals(cd) && !"".equals(nt) && !"".equals(to) && !"".equals(sd) && !"".equals(dc) && !"".equals(na) && !"".equals(pi)) {
        
            try {
                ps = conn.prepareStatement("INSERT INTO `orders`(createdate, name_tour, touroperator, startdate, dayscount, name_agent, passport_id) VALUES(?, ?, ?, ?, ?, ?, ?);");
                ps.setString(1, cd);
                ps.setString(2, nt);
                ps.setString(3, to);
                ps.setString(4, sd);
                ps.setString(5, dc);
                ps.setString(6, na);
                ps.setString(7, pi);
                ps.executeUpdate();
                
                JOptionPane.showMessageDialog(this, "Додано договір");
                tableUpdate("SELECT * FROM `orders`;");
                
                txtCD.setText("");
                cbNT.setSelectedItem("");
                cbTO.setSelectedItem("");
                txtSD.setText("");
                txtDC.setText("");
                cbNA.setSelectedItem("");
                cbPI.setSelectedItem("");
                txtCD.requestFocus();
                
            } catch (SQLException ex) {
                Logger.getLogger(OrdersForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonNewActionPerformed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        
        String id = df.getValueAt(selectedIndex, 0).toString();
        String cd = txtCD.getText();
        String nt = cbNT.getSelectedItem().toString();
        String to = cbTO.getSelectedItem().toString();
        String sd = txtSD.getText();
        String dc = txtDC.getText();
        String na = cbNA.getSelectedItem().toString();
        String pi = cbPI.getSelectedItem().toString();
        
        if (!"".equals(cd) && !"".equals(nt) && !"".equals(to) && !"".equals(sd) && !"".equals(dc) && !"".equals(na) && !"".equals(pi)) {
        
            try {
                ps = conn.prepareStatement("UPDATE `orders` SET createdate=?, name_tour=?, touroperator=?, startdate=?, dayscount=?, name_agent=?, passport_id=? WHERE idorders=?;");
                ps.setString(1, cd);
                ps.setString(2, nt);
                ps.setString(3, to);
                ps.setString(4, sd);
                ps.setString(5, dc);
                ps.setString(6, na);
                ps.setString(7, pi);
                ps.setString(8, id);
                ps.executeUpdate();
                
                JOptionPane.showMessageDialog(this, "Відредаговано дані замовлення");
                tableUpdate("SELECT * FROM `orders`;");
                
                buttonEdit.setEnabled(false);
                buttonDelete.setEnabled(false);
                txtCD.setText("");
                cbNT.setSelectedItem("");
                cbTO.setSelectedItem("");
                txtSD.setText("");
                txtDC.setText("");
                cbNA.setSelectedItem("");
                cbPI.setSelectedItem("");
                txtCD.requestFocus();
                
            } catch (SQLException ex) {
                Logger.getLogger(OrdersForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonEditActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        txtCD.setText(df.getValueAt(selectedIndex, 1).toString());
        cbNT.setSelectedItem(df.getValueAt(selectedIndex, 2));
        cbTO.setSelectedItem(df.getValueAt(selectedIndex, 3));
        txtSD.setText(df.getValueAt(selectedIndex, 4).toString());
        txtDC.setText(df.getValueAt(selectedIndex, 5).toString());
        cbNA.setSelectedItem(df.getValueAt(selectedIndex, 6));
        cbPI.setSelectedItem(df.getValueAt(selectedIndex, 7));
        buttonEdit.setEnabled(true);
        buttonDelete.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        String id = df.getValueAt(selectedIndex, 0).toString();
        int dialogResult = JOptionPane.showConfirmDialog(null, "Ви хочете видалити дані договору " + id + "?", "Видалення запису", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                ps = conn.prepareStatement("DELETE FROM `orders` WHERE idorders=?;");
                ps.setString(1, id);
                ps.executeUpdate();
                
                JOptionPane.showMessageDialog(this, "Дані договору видалено");
                tableUpdate("SELECT * FROM `orders`;");
                
                buttonEdit.setEnabled(false);
                buttonDelete.setEnabled(false);
                txtCD.setText("");
                cbNT.setSelectedItem("");
                cbTO.setSelectedItem("");
                txtSD.setText("");
                txtDC.setText("");
                cbNA.setSelectedItem("");
                cbPI.setSelectedItem("");
                txtCD.requestFocus();
                
            } catch (SQLException ex) {
                Logger.getLogger(OrdersForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void txtDCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDCActionPerformed

    private void tableUpdate(String query) {
        int c;
        try {
            ps = conn.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData meta = rs.getMetaData();
            c = meta.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            df.setRowCount(0);
            while(rs.next()) {
                Vector v = new Vector();
                for (int i = 1; i <= c; i++) {
                    v.add(rs.getString("idorders"));
                    v.add(rs.getString("createdate"));
                    v.add(rs.getString("name_tour"));
                    v.add(rs.getString("touroperator"));
                    v.add(rs.getString("startdate"));
                    v.add(rs.getString("dayscount"));
                    v.add(rs.getString("name_agent"));
                    v.add(rs.getString("passport_id"));
                }
                df.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrdersForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void cbNTUpdate() {
        try {
            ps = conn.prepareStatement("SELECT DISTINCT name_tour FROM `tours`;");
            ResultSet rs = ps.executeQuery();
            DefaultComboBoxModel df = (DefaultComboBoxModel)cbNT.getModel();
            df.removeAllElements();
            df.addElement("");
            while (rs.next()) {
                String el = rs.getString("name_tour");
                df.addElement(el);
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrdersForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void cbTOUpdate() {
        try {
            ps = conn.prepareStatement("SELECT DISTINCT touroperator FROM `tours`;");
            ResultSet rs = ps.executeQuery();
            DefaultComboBoxModel df = (DefaultComboBoxModel)cbTO.getModel();
            df.removeAllElements();
            df.addElement("");
            while (rs.next()) {
                String el = rs.getString("touroperator");
                df.addElement(el);
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrdersForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void cbNAUpdate() {
        try {
            ps = conn.prepareStatement("SELECT DISTINCT name_agent FROM `agents`;");
            ResultSet rs = ps.executeQuery();
            DefaultComboBoxModel df = (DefaultComboBoxModel)cbNA.getModel();
            df.removeAllElements();
            df.addElement("");
            while (rs.next()) {
                String el = rs.getString("name_agent");
                df.addElement(el);
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrdersForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void cbPIUpdate() {
        try {
            ps = conn.prepareStatement("SELECT DISTINCT passport_id FROM `customers`;");
            ResultSet rs = ps.executeQuery();
            DefaultComboBoxModel df = (DefaultComboBoxModel)cbPI.getModel();
            df.removeAllElements();
            df.addElement("");
            while (rs.next()) {
                String el = rs.getString("passport_id");
                df.addElement(el);
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrdersForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
//    private void tableHeaderMouseListener() {
//        JTableHeader header = jTable1.getTableHeader();
//        header.addMouseListener(new TableHeaderMouseListener(jTable1));
//    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AgentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AgentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AgentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AgentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AgentsForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonNew;
    private javax.swing.JComboBox<String> cbNA;
    private javax.swing.JComboBox<String> cbNT;
    private javax.swing.JComboBox<String> cbPI;
    private javax.swing.JComboBox<String> cbTO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCD;
    private javax.swing.JTextField txtDC;
    private javax.swing.JTextField txtSD;
    // End of variables declaration//GEN-END:variables
}
